from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from telegram.constants import ChatType, ParseMode
import re

TOKEN = '8026878396:AAGzEw7NTXmxIexW3aeEWX8kkkH7GUAItuE'
GROUP_ID = -1001350244365
ADMIN_IDS = [333636347]

def get_clickable_user(user):
    if user.username:
        return f"[@{user.username}](tg://user?id={user.id})"
    else:
        return f"[{user.first_name}](tg://user?id={user.id})"

# –ö–æ–º–∞–Ω–¥–∞ /post - –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ –≥—Ä—É–ø—É
async def post_to_group(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in ADMIN_IDS:
        await update.message.reply_text("‚õî –¢–∏ –Ω–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä.")
        return

    message_text = update.message.text
    full_text = message_text[len("/post"):].strip()

    if not full_text:
        await update.message.reply_text("‚ö†Ô∏è –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –ø—ñ—Å–ª—è /post.")
        return

    try:
        await context.bot.send_message(chat_id=GROUP_ID, text=full_text)
        await update.message.reply_text("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ –≥—Ä—É–ø—É.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ –≥—Ä—É–ø—É: {e}")

# –û–±—Ä–æ–±–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
async def handle_private(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    user = update.effective_user

    user_link = get_clickable_user(user)
    header_text = f"üì© –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user_link}\nüÜî [ID: {user.id}](tg://user?id={user.id})"

    if message.text:
        for admin in ADMIN_IDS:
            await context.bot.send_message(
                chat_id=admin,
                text=f"{header_text}\n\n{message.text}",
                parse_mode=ParseMode.MARKDOWN
            )
        await message.reply_text("‚úÖ –î—è–∫—É—é! –Ø –º–µ–Ω—ñ –ø—Ä–∏–π—à–ª–æ —Ç–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∞–ª–µ —Ç–∞–∫ —è–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∞—Ü—é—é—Ç—å –Ω–µ—Å—Ç–∞–±—ñ–ª—å–Ω–æ —Ç–æ –¥–æ—á–µ–∫–∞–π—Ç–µ—Å—å –∑'—î–¥–Ω–∞–Ω–Ω—è, –Ω–µ –∑–∞—Å–º—É—á—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ —Ü–µ, –∞–¥–∂–µ —è —â–µ –≤—á—É—Å—å —ñ —î –Ω–µ —Å—Ç–∞–±—ñ–ª—å–Ω–∏–º.")

    elif message.photo:
        caption = message.caption or ""
        full_caption = f"{header_text}\n\n{caption}"
        for admin in ADMIN_IDS:
            await context.bot.send_photo(
                chat_id=admin,
                photo=message.photo[-1].file_id,
                caption=full_caption,
                parse_mode=ParseMode.MARKDOWN
            )
        await message.reply_text("üì∑ –ì–∞—Ä–∞–∑–¥,–¥—è–∫—É—é! –Ø —Ä–∞–¥–∏–π —â–æ –≤–∏ –ø–æ–¥—ñ–ª–∏—Å—å –∑—ñ –º–Ω–æ—é —Ü—ñ—î—é —Ñ–æ—Ç–æ–≥—Ä–∞—ñ—é, –∞–ª–µ –Ω–∞–∂–∞–ª—å –Ω–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –º–æ—ó —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞—Ä–∞–∑ –æ—Ç—Ä–∏–º—É—Ü—é—Ç—å –≤–µ–ª–∏–∫—É –Ω–∞–≥—Ä—É–∑–∫—É, –∫–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ —Å—Ç–∞–Ω—É—Ç—å –º–µ–Ω—à –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ñ, —è –≤–∞–º –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ–º .")

    elif message.video:
        caption = message.caption or ""
        full_caption = f"{header_text}\n\n{caption}"
        for admin in ADMIN_IDS:
            await context.bot.send_video(
                chat_id=admin,
                video=message.video.file_id,
                caption=full_caption,
                parse_mode=ParseMode.MARKDOWN
            )
        await message.reply_text("üé• –ì–∞—Ä–∞–∑–¥,–¥—è–∫—É—é! –Ø —Ä–∞–¥–∏–π —â–æ –≤–∏ –ø–æ–¥—ñ–ª–∏—Å—å –∑—ñ –º–Ω–æ—é —Ü–∏–º –≤—ñ–¥–µ–æ, –∞–ª–µ –Ω–∞–∂–∞–ª—å –Ω–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –º–æ—ó —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞—Ä–∞–∑ –æ—Ç—Ä–∏–º—É—Ü—é—Ç—å –≤–µ–ª–∏–∫—É –Ω–∞–≥—Ä—É–∑–∫—É, –∫–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ —Å—Ç–∞–Ω—É—Ç—å –º–µ–Ω—à –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ñ, —è –≤–∞–º –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ–º.")

# –ö–æ–º–∞–Ω–¥–∞ /reply - –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É (—Ç–µ–∫—Å—Ç)
async def reply_to_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in ADMIN_IDS:
        await update.message.reply_text("‚õî –¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É.")
        return

    args = context.args
    if len(args) < 2:
        await update.message.reply_text("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /reply user_id —Ç–µ–∫—Å—Ç_–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
        return

    try:
        target_id = int(args[0])
    except ValueError:
        await update.message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞: user_id –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")
        return

    reply_text = ' '.join(args[1:])
    try:
        await context.bot.send_message(chat_id=target_id, text=reply_text)
        await update.message.reply_text(f"‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {target_id}.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {e}")

# üîÅ –ö–æ–º–∞–Ω–¥–∞ /replylink - –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –≥—Ä—É–ø—ñ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º
async def reply_by_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in ADMIN_IDS:
        await update.message.reply_text("‚õî –¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å —Ü–µ —Ä–æ–±–∏—Ç–∏.")
        return

    args = context.args
    if len(args) < 2:
        await update.message.reply_text("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /replylink <–ø–æ—Å–∏–ª–∞–Ω–Ω—è> <—Ç–µ–∫—Å—Ç>")
        return

    link = args[0]
    reply_text = ' '.join(args[1:])

    # –û—Ç—Ä–∏–º—É—î–º–æ message_id –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
    match = re.search(r'/(\d+)$', link)
    if not match:
        await update.message.reply_text("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.")
        return

    message_id = int(match.group(1))

    try:
        await context.bot.send_message(
            chat_id=GROUP_ID,
            text=reply_text,
            reply_to_message_id=message_id
        )
        await update.message.reply_text("‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —É –≥—Ä—É–ø—É.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {e}")

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤—ñ—Ç! –Ø —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ü—å–æ–≥–æ, –∞–±–∏ –ø—ñ–¥–Ω—ñ–º–∞—Ç–∏ –∞–∫—Ç–∏–≤ –≥—Ä—É–ø–∏. –Ø–∫—â–æ —É –≤–∞—Å —î –±–∞–∂–∞–Ω–Ω—è –ø–æ —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å –∑—ñ –º–Ω–æ—é –≤ –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö, –ø–∏—à—ñ—Ç—å —Å—é–¥–∏, –∞–ª–µ —è —â–µ –Ω–µ –¥—É–∂–µ —Ä–æ–∑–≤–∏–Ω—É–≤—Å—è, —Ç–æ–º—É –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –≤–∞–º –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –≤ –Ω–∞–π–±–ª–∏—â—ñ —Ç–µ—Ä–º—ñ–Ω–∏, —Ç–∞ –∑–∞–≤–∂–¥–∏ –±—É–¥—É —Ä–∞–¥–∏–π –∑ –≤–∞–º–∏ –ø–æ —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å —É –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("post", post_to_group))
app.add_handler(CommandHandler("reply", reply_to_user))
app.add_handler(CommandHandler("replylink", reply_by_link))

app.add_handler(MessageHandler(
    (filters.TEXT | filters.PHOTO | filters.VIDEO) & filters.ChatType.PRIVATE,
    handle_private
))

print("[‚úÖ –ë–û–¢ –ó–ê–ü–£–©–ï–ù–ò–ô]")
app.run_polling()
